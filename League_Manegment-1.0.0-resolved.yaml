---
openapi: 3.0.0
info:
  title: League Manegment API
  description: This is a simple API for our football legue manegment system
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/liorsavc/League_Manegment/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://virtserver.swaggerhub.com/liorsavc/Register/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /register:
    post:
      tags:
      - guest
      summary: register new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        "201":
          description: New user added
        "500":
          description: server error at register new user
  /login:
    post:
      tags:
      - guest
      summary: Login into the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
        required: true
      responses:
        "200":
          description: Successful Login
  /player:
    get:
      tags:
      - player
      summary: get all players data
      responses:
        "200":
          description: returns data about all players
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playersArray'
        "404":
          description: players not found
  /player/preview/{playerId}:
    get:
      tags:
      - player
      summary: get the data about the player for short preview
      parameters:
      - name: playerId
        in: path
        description: Numeric ID of the player to get his information
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 550
      responses:
        "200":
          description: returns data about the player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playerPreview'
        "404":
          description: player id not found
  /player/fullDetails/{playerId}:
    get:
      tags:
      - player
      summary: get the full detailed data about the player to preview
      parameters:
      - name: playerId
        in: path
        description: Numeric ID of the player to get his information
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 550
      responses:
        "200":
          description: returns data about the player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playerFullDetails'
        "404":
          description: player id not found
  /coach:
    get:
      tags:
      - coach
      summary: get all coaches data
      responses:
        "200":
          description: returns data about all coaches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coachesArray'
        "404":
          description: coaches not found
  /coach/preview/{coachId}:
    get:
      tags:
      - coach
      summary: get the data about the player for short preview
      parameters:
      - name: coachId
        in: path
        description: Numeric ID of the coach to get his information
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 12
      responses:
        "200":
          description: data about the coach
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coachPreview'
        "404":
          description: coach id not found
  /coach/fullDetails/{coachId}:
    get:
      tags:
      - coach
      summary: get the full detailed data about the coach to preview
      parameters:
      - name: coachId
        in: path
        description: Numeric ID of the coach to get his information
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 12
      responses:
        "200":
          description: returns data about the coach
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coachFullDetails'
        "404":
          description: coach id not found
  /favorites/matches/{userId}:
    get:
      tags:
      - favorites
      summary: get the favorite matches of user
      parameters:
      - name: userId
        in: path
        description: Numeric ID of the user to get his favorite matches
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 333
      responses:
        "200":
          description: array of favorite matches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/arrayOfMatches'
        "404":
          description: user id not found
  /favorites/addPlayer:
    post:
      tags:
      - favorites
      summary: add player id to favorite players list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "201":
          description: Successfully added player to favorite players list
  /favorites/removePlayer/{playerId}:
    delete:
      tags:
      - favorites
      summary: delete player id from favorite players list
      parameters:
      - name: playerId
        in: path
        description: Numeric ID of the player to remove
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 3334
      responses:
        "201":
          description: Successfully removed player from favorite players list
        "404":
          description: player id not found
  /favorites/addTeam:
    post:
      tags:
      - favorites
      summary: add team id to favorite teams list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        "201":
          description: Successfully added team to favorite teams list
  /favorites/removeTeam/{teamId}:
    delete:
      tags:
      - favorites
      summary: delete team id from favorite teams list
      parameters:
      - name: teamId
        in: path
        description: Numeric ID of the team to remove
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 3334
      responses:
        "201":
          description: Successfully removed team from favorite teams list
        "404":
          description: team id not found
  /favorites/addMatch:
    post:
      tags:
      - favorites
      summary: add match id to favorite matches list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "201":
          description: Successfully added match to favorite matches list
  /favorites/removeMatch/{matchId}:
    delete:
      tags:
      - favorites
      summary: delete match id from favorite matches list
      parameters:
      - name: matchId
        in: path
        description: Numeric ID of the match to remove
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 7777
      responses:
        "201":
          description: Successfully removed match from favorite matches list
        "404":
          description: match id not found
  /team:
    get:
      tags:
      - team
      summary: get all teams data
      responses:
        "200":
          description: returns data about all teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teamsArray'
        "404":
          description: teams not found
  /team/page/{teamId}:
    get:
      tags:
      - team
      summary: get the data about the team
      parameters:
      - name: teamId
        in: path
        description: Numeric ID of the team to get its information
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 323
      responses:
        "200":
          description: returns data about the team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teamDetails'
        "404":
          description: team id not found
components:
  schemas:
    user:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
        firstName:
          type: string
        lastName:
          type: string
        country:
          type: string
        password:
          maxLength: 10
          minLength: 5
          type: string
          format: password
        passwordConfirm:
          type: string
          format: password
        email:
          type: string
          format: email
        profilePic:
          type: string
          format: URL
    login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    match:
      type: object
      properties:
        leagueName:
          type: string
        seasonName:
          type: string
        stageName:
          type: string
        homeTeam:
          type: string
        awayTeam:
          type: string
        date:
          type: string
          format: date
        refereeName:
          type: string
        stadium:
          type: string
        result:
          $ref: '#/components/schemas/match_result'
        matchEventCalendar:
          $ref: '#/components/schemas/eventsArray'
    arrayOfMatches:
      type: array
      items:
        $ref: '#/components/schemas/match'
    playerPreview:
      type: object
      properties:
        fullName:
          type: string
        activeTeam:
          type: string
        profilePicURL:
          type: string
          format: URL
        position:
          type: integer
        personalPage:
          type: string
          format: URL
    playerFullDetails:
      type: object
      properties:
        playerPreview:
          $ref: '#/components/schemas/playerPreview'
        common_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        nationality:
          type: string
        birthcountry:
          type: string
        height:
          type: string
        weight:
          type: string
      description: additional data the is not displayed in the preview about the player.
    playersArray:
      type: array
      items:
        $ref: '#/components/schemas/playerPreview'
    coachPreview:
      type: object
      properties:
        fullName:
          type: string
        activeTeam:
          type: string
        profilePicURL:
          type: string
          format: URL
        personalPage:
          type: string
          format: URL
    coachFullDetails:
      type: object
      properties:
        playerPreview:
          $ref: '#/components/schemas/coachPreview'
        common_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        nationality:
          type: string
        birthcountry:
          type: string
      description: additional data the is not displayed in the preview about the player.
    coachesArray:
      type: array
      items:
        $ref: '#/components/schemas/coachPreview'
    teamDetails:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/playerPreview'
        coach:
          $ref: '#/components/schemas/teamDetails_coach'
        prevMatches:
          type: array
          items:
            $ref: '#/components/schemas/match'
        futureMatches:
          type: array
          items:
            $ref: '#/components/schemas/match'
        name:
          type: string
        logoURL:
          type: string
          format: url
    teamsArray:
      type: array
      items:
        $ref: '#/components/schemas/teamDetails'
    event:
      type: object
      properties:
        eventId:
          type: integer
        teamId:
          type: integer
        type:
          type: string
        playerName:
          type: string
        minute:
          type: integer
    eventsArray:
      type: array
      items:
        $ref: '#/components/schemas/event'
    body:
      type: object
      properties:
        playerId:
          type: integer
          example: 3334
    body_1:
      type: object
      properties:
        teamId:
          type: integer
          example: 3334
    body_2:
      type: object
      properties:
        matchId:
          type: integer
          example: 456
    match_result:
      type: object
      properties:
        homeScore:
          type: integer
        awayScore:
          type: integer
    teamDetails_coach:
      type: object
      properties:
        coachPreview:
          $ref: '#/components/schemas/coachPreview'
